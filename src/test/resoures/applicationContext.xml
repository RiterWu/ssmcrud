<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 扫描service包，让service的注解起作用 -->
    <context:component-scan base-package="com.xwh"/>
    <!--   &lt;!&ndash;不扫controller&ndash;&gt;
       <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
    <!--</context:component-scan>-->


    <!-- 加载db.propertites -->
    <context:property-placeholder location="classpath:db.properties"/>

    <bean id="dataSource"
          class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <property name="initialSize" value="${db.initialSize}"/>
        <property name="maxWaitMillis" value="${db.maxWait}"/>
        <property name="maxTotal" value="${db.maxActive}"/>
    </bean>

    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <property name="mapperLocations" value="classpath:mybatis/mapper/*Mapper.xml"></property>
        <!-- 配置mybatis分页插件PageHelper -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!-- 什么都不配，使用默认的配置 -->
                        <value>
                            Dialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--配置一个可以执行批量的sqlSession-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>

    <!-- mapper扫描器 -->
    <!-- 会自动生成一个标识为mapper接口类型首字母小写的bean -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xwh.dao"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!--事务控制的配置-->
    <bean id="txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- <aop:config>
         &lt;!&ndash;切入点表达式&ndash;&gt;
         <aop:pointcut id="txtPoint" expression="execution(* com.xwh.service..*(..))"/>
         &lt;!&ndash;配置事务增强&ndash;&gt;
         <aop:advisor advice-ref="txtAdvice" pointcut-ref="txtPoint"/>
     </aop:config>
     &lt;!&ndash;配置事务增强,事务如何切入&ndash;&gt;
     <tx:advice id="txtAdvice" transaction-manager="txManager">
         <tx:attributes>
             &lt;!&ndash;所有方法都是事务方法&ndash;&gt;
             <tx:method name="*"/>
             <tx:method name="get*" read-only="true"/>
         </tx:attributes>
     </tx:advice>-->

    <tx:annotation-driven transaction-manager="txManager"/>

</beans>